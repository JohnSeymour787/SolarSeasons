plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

def apiKeyPropertiesFile = rootProject.file("apiKeys.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.johnseymour.solarseasons"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "OPEN_UV_API_KEY", apiKeyProperties["OPENUV_API_KEY"]
        buildConfigField "boolean", "USE_GOOGLE_PLAY_LOCATION", 'false'
        buildConfigField "boolean", "ENABLE_MANUAL_LOCATION", 'false'
        buildConfigField "boolean", "ENABLE_API_KEY_ENTRY", 'false'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        luke {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "OPEN_UV_API_KEY", apiKeyProperties["OPENUV_API_KEY"]
            buildConfigField "boolean", "ENABLE_API_KEY_ENTRY", 'false'
        }

        nathan {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "OPEN_UV_API_KEY", '""'
            buildConfigField "boolean", "ENABLE_MANUAL_LOCATION", 'true'
            buildConfigField "boolean", "ENABLE_API_KEY_ENTRY", 'true'
        }

        steven {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "OPEN_UV_API_KEY", '""'
            buildConfigField "boolean", "ENABLE_API_KEY_ENTRY", 'true'
        }

        china {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "OPEN_UV_API_KEY", apiKeyProperties["OPENUV_API_KEY"]
            buildConfigField "boolean", "ENABLE_API_KEY_ENTRY", 'false'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.work:work-runtime-ktx:2.6.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

    implementation 'nl.komponents.kovenant:kovenant-android:3.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
